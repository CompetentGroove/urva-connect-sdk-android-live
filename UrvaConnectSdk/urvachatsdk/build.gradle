
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'maven-publish'


android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 3
        versionName getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}


/**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))


def getVersionName = { ->
    return "1.0.2" // Replace with version Name
}

def getArtificatId = { ->
    return "urvachatsdk" // Replace with library name ID
}

//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId 'competent.groove.urva'
//            artifactId getArtificatId()
//            version getVersionName()
//            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
//
//            pom.withXml {
//                final dependenciesNode = asNode().appendNode('dependencies')
//                ext.addDependency = { Dependency dep, String scope ->
//                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
//                        return
//                    final dependencyNode = dependenciesNode.appendNode('dependency')
//                    dependencyNode.appendNode('groupId', dep.group)
//                    dependencyNode.appendNode('artifactId', dep.name)
//                    dependencyNode.appendNode('version', dep.version)
//                    dependencyNode.appendNode('scope', scope)
//                    if (!dep.transitive) {
//                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
//                        exclusionNode.appendNode('groupId', '*')
//                        exclusionNode.appendNode('artifactId', '*')
//                    } else if (!dep.properties.excludeRules.empty) {
//                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
//                        dep.properties.excludeRules.each { ExcludeRule rule ->
//                            exclusionNode.appendNode('groupId', rule.group ?: '*')
//                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
//                        }
//                    }
//                }
//                configurations.compile.getDependencies().each { dep -> addDependency(dep, "compile") }
//                configurations.api.getDependencies().each { dep -> addDependency(dep, "compile") }
//                configurations.implementation.getDependencies().each { dep -> addDependency(dep, "runtime") }
//            }
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            /** Configure path of your package repository on Github
//             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
//             */
////            url = uri("https://maven.pkg.github.com/harpreetcompetent/Urva-forms-sdk")
//            url = uri("https://maven.pkg.github.com/competentgroove/urva-connect-sdk-android-live")
//
//
//            credentials {
//                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
//                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//            }
//        }
//
//    }
//}



repositories {
    google()
    maven {
        url "https://storage.googleapis.com/download.flutter.io"
    }
    maven {
        url "libs/repo"
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    debugImplementation 'competent.groove.urva_connect_sdk:flutter_debug:1.0'
    releaseImplementation 'competent.groove.urva_connect_sdk:flutter_release:1.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}
